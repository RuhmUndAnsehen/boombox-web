@use "sass:list";
@use "sass:meta";

$zero-angle: 270deg;
$angle: 20deg !default;
$earmark-color: transparent !default;
$earmark-offset: 1em !default;
$stripe-color: #222 !default;
$stripe-width: 0.5em !default;
$background-color: transparent !default;

/// Produces an earmark linear gradient.
///
/// @param {angle} $angle
///   The gradient angle.
/// @param {color [length]} $earmark
///   The earmark color and offset.
/// @param {color [length]} $stripe
///   The stripe color and width.
/// @param {color [length]} $background
///   The background color.
/// @param {length} $box-height
///   The height of the box the earmark is added to.
/// @param {bool} $anti-aliasing
///   If true, inserts additional color stops to make angled gradients appear
///   smoother.
/// @param {color [length] | null} $stripe-boundary
///   Color and width of the stripe borders, or null if no border should be
///   generated. Defines $stripe-earmark-boundary and/or
///   $stripe-background-boundary if left unspecified.
/// @param {color [length] | null} $stripe-earmark-boundary
///   Color and width of the border between earmark and stripe, or null if no
///   border should be generated.
/// @param {color [length] | null} $stripe-background-boundary
///   Color and width of the border between stripe and background, or null if
///   no border should be generated.
/// @param {string} $stripe-sizing
///   If the stripe width should include the border, pass "border". Pass any
///   other value otherwise.
///
/// @return {background-image} a linear gradient
@function gradient($angle: $angle,
                   $earmark: $earmark-color,
                   $stripe: $stripe-color,
                   $background: $background-color,
                   $box-height: 2em,
                   $anti-aliasing: true,
                   $stripe-boundary: null,
                   $stripe-earmark-boundary: null,
                   $stripe-background-boundary: null,
                   $stripe-sizing: border) {
  // Extract colors from the parameters.
  $earmark-color: _color($earmark);
  $stripe-color: _color($stripe);
  $background-color: _color($background);

  $earmark-offset: calc(sin($angle) * $box-height + $earmark-offset);
  // Compute stops.
  $earmark-stop-end: calc($earmark-offset + _stop($earmark, 0px));
  $stripe-stop-start: $earmark-stop-end;
  $stripe-stop-end: calc($earmark-stop-end + _stop($stripe, $stripe-width));
  $background-stop-start: $stripe-stop-end;

  // If anti-aliasing is enabled, allow a 1 pixel wide gradient between stops of
  // different colors.
  $aa-offset: 1px;

  // If the stripe should have a border.
  @if $stripe-boundary or $stripe-earmark-boundary
      or $stripe-background-boundary {
    $stripe-earmark-boundary: $stripe-earmark-boundary or $stripe-boundary
                              or $stripe-background-boundary;
    $stripe-background-boundary: $stripe-background-boundary or $stripe-boundary
                                 or $stripe-earmark-boundary;
    // Compute stripe border color and width.
    $stripe-earmark-boundary-color: _color($stripe-earmark-boundary);
    $stripe-earmark-boundary-width: _stop($stripe-earmark-boundary, 1px);
    $stripe-background-boundary-color: _color($stripe-background-boundary);
    $stripe-background-boundary-width: _stop($stripe-background-boundary, 1px);

    // Declare variables for later assignment.
    $earmark-border-stop-start: null;
    $earmark-border-stop-end: null;
    $background-border-stop-start: null;
    $background-border-stop-end: null;

    // If stripe-sizing is set to "border" use the stripe stops as outer
    // boundaries for the border stops.
    @if $stripe-sizing == border {
      $earmark-border-stop-start: $stripe-stop-start;
      $earmark-border-stop-end: calc($earmark-border-stop-start
                                     + $stripe-earmark-boundary-width);
      $stripe-stop-start: $earmark-border-stop-end;

      $background-border-stop-end: $stripe-stop-end;
      $background-border-stop-start: calc($background-border-stop-end
                                          - $stripe-background-boundary-width);
      $stripe-stop-end: $background-border-stop-start;
    }
    // Otherwise, expand the border into the earmark and background areas.
    @else {
      $earmark-border-stop-end: $earmark-stop-end;
      $earmark-border-stop-start: calc($earmark-border-stop-end
                                       - $stripe-earmark-boundary-width);
      $earmark-stop-end: $earmark-border-stop-start;

      $background-border-stop-start: $background-stop-start;
      $background-border-stop-end: calc($background-border-stop-start
                                        + $stripe-background-boundary-width);
      $background-stop-start: $background-border-stop-end;
    }

    // Apply the aa-offset if anti-aliasing is enabled.
    @if $anti-aliasing {
      $earmark-stop-end: calc($earmark-stop-end - $aa-offset);
      $earmark-border-stop-end: calc($earmark-border-stop-end - $aa-offset);
      $stripe-stop-end: calc($stripe-stop-end - $aa-offset);
      $background-border-stop-end: calc($background-border-stop-end
                                        - $aa-offset);
    }

    @return linear-gradient(calc(270deg + $angle),
                            $earmark-color $earmark-stop-end,
                            $stripe-earmark-boundary-color
                              $earmark-border-stop-start
                              $earmark-border-stop-end,
                            $stripe-color $stripe-stop-start $stripe-stop-end,
                            $stripe-background-boundary-color
                              $background-border-stop-start
                              $background-border-stop-end,
                            $background-color $background-stop-start);

  }
  // No border around the stripe.
  @else {
    // Apply the aa-offset if anti-aliasing is enabled.
    @if $anti-aliasing {
      $earmark-stop-end: calc($earmark-stop-end - $aa-offset);
      $stripe-stop-end: calc($stripe-stop-end - $aa-offset);
    }

    @return linear-gradient(calc(270deg + $angle),
                            $earmark-color $earmark-stop-end,
                            $stripe-color $stripe-stop-start $stripe-stop-end,
                            $background-color $background-stop-start);
  }
}

@function _color($color-stop, $default-color: transparent) {
  $color: list.nth($color-stop, 1);
  $type-of-color: meta.type-of($color);

  @if $type-of-color == number or $type-of-color == calculation {
    @return $default-color;
  }

  @return $color;
}

@function _stop($color-stop, $default-length) {
  @if list.length($color-stop) == 1 {
    @return $default-length;
  }

  $stop: list.nth($color-stop, 2);
  @if meta.type-of($stop) == number {
    @return $stop;
  }

  @return $default-stop;
}
