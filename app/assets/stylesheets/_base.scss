@use "sass:meta";

@use "functions/list";
@use "functions/map";

@use "earmark";

@mixin styles($line-height: 1, $small-margin: 0.5, $wide-margin: 1,
              $base-bg-color: white, $link-color: blue,
              $link-color-visited: navy, $link-color-active: teal,
              $ornament-color: navy, $accent-color: blue,
              $important-ornament-color: salmon, $important-accent-color: wheat) {

  :root {
    position: relative;

    height: 100%;
    width: 100%;

    font-size: 18px;

    transition: all 0.42s ease;
  }

  *, *::before, *::after {
    box-sizing: border-box;

    transition: inherit;
  }

  body {
    overflow-x: hidden;
    overflow-y: scroll;

    width: 100%;
    height: 100%;

    line-height: $line-height;
  }

  main {
    background-color: $base-bg-color;

    // Prevent margin collapse between header and the first child.
    &::before {
      content: ' ';

      display: block;
      width: 1px;
      height: 1px;
      margin-right: -1px;
      margin-bottom: -1px;
    }
  }

  a {
    display: inline-block;

    color: $link-color;

    // Firefox incorrectly transitions if the color of visited links differs from
    // the regular link color (and a hover/focus/active color is set).
    -moz-transition-property: none;

    &:visited {
      color: $link-color-visited;
    }

    :is(&, &:visited):is(:active, :focus, :hover) {
      color: $link-color-active;
    }
  }

  h1, h2, h3, h4, h5 {
    font-weight: lighter;
  }

  h1, h2, h3, h4, h5, h6 {
    margin: {
      top: $wide-margin;
      bottom: $small-margin;
    }

    position: relative;
    z-index: 1;
  }

  $box-height: $line-height * 1em + 2 * $small-margin;
  @include heading(1, $small-margin,
                   $important-accent-color, transparent, $base-bg-color,
                   $box-height: $box-height,
                   $border-spec: (earmark: $important-ornament-color,
                                  background: $important-accent-color),
                   $stripe-earmark-boundary: $important-ornament-color,
                   $stripe-background-boundary: $important-accent-color);
  @include heading(2, $small-margin, $accent-color, $ornament-color,
                   transparent, $box-height: $box-height) {
    @include earmark.pseudo-element-base("&::after") {
      z-index: -2;

      border-bottom: 1px solid $ornament-color;
    }
  }

  @include heading(3, $small-margin, $ornament-color, transparent,
                   transparent, $box-height: $box-height);
  @include heading(4, $small-margin) {
    border-right: 1px solid $ornament-color;
  }

  @include heading(5, $small-margin);
  @include heading(6, $small-margin, $box-height: $box-height,
                   $stripe: $accent-color $small-margin);

  p {
    padding: 0 $small-margin $wide-margin $small-margin;

    + h6 {
      margin-top: $small-margin;
    }
  }
}

@mixin heading($level, $padding: 0px, $earmark-args...) {
  h#{$level} {
    $multiplier: heading-multiplier($level);
    padding: $padding calc($padding / $multiplier);
    font-size: 1em * $multiplier;

    @if not list.is-empty($earmark-args) {
      @include earmark.pseudo-before(20deg, $earmark-args...);
    }

    @if meta.content-exists() {
      @content;
    }
  }
}

@function heading-multiplier($level) {
  @if $level == 6 {
    @return 0.8;
  }

  $multiplier: 1;

  @for $level from $level to 6 {
    $level-multiplier: (5 - $level) * 0.1 + 1;
    $multiplier: $multiplier * $level-multiplier;
  }

  @return $multiplier;
}
